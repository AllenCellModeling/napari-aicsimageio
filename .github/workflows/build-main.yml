name: Build Main

on:
  push:
    branches:
      - main
  schedule:
    # <minute [0,59]> <hour [0,23]> <day of the month [1,31]> <month of the year [1,12]> <day of the week [0,6]>
    # https://pubs.opengroup.org/onlinepubs/9699919799/utilities/crontab.html#tag_20_25_07
    # Run every Monday at 18:00:00 UTC (Monday at 10:00:00 PST)
    - cron: "0 18 * * 1"

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8, 3.9]
        os: [
          ubuntu-18.04,
          ubuntu-20.04,
          # windows-latest,
          macOS-10.15,
        ]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    # Install qt support libs
    - uses: tlambert03/setup-qt-libs@v1

    # strategy borrowed from vispy for installing opengl libs on windows
    - name: Install Windows OpenGL
      if: runner.os == 'Windows'
      run: |
        git clone --depth 1 https://github.com/pyvista/gl-ci-helpers.git
        powershell gl-ci-helpers/appveyor/install_opengl.ps1
        if (Test-Path -Path "C:\Windows\system32\opengl32.dll" -PathType Leaf) {Exit 0} else {Exit 1}

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .[test] 

    - name: Download Test Resources
      run: |
        python scripts/download_test_resources.py

    - name: Test with pytest
      uses: GabrielBB/xvfb-action@v1
      with:
        run: python -m pytest --cov-report xml --cov=napari_aicsimageio napari_aicsimageio/tests/
    - name: Upload codecov
      uses: codecov/codecov-action@v1

  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.9
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .[test]
    - name: Lint with flake8
      run: |
        flake8 napari_aicsimageio --count --verbose --show-source --statistics
        isort napari_aicsimageio --check-only
        mypy napari_aicsimageio
        black --check --exclude vendor napari_aicsimageio

  publish:
    if: "contains(github.event.head_commit.message, 'Bump version')"
    needs: [test, lint]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.9
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel
    - name: Build Package
      run: |
        python setup.py sdist bdist_wheel
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: aicspypi
        password: ${{ secrets.PYPI_TOKEN }}
