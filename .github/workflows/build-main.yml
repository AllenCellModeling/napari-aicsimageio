name: CI

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  check-manifest:
    name: Check Manifest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - run: pip install check-manifest && check-manifest

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8, 3.9, "3.10"]
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    # Install qt support libs
    - uses: tlambert03/setup-qt-libs@v1

    # strategy borrowed from vispy for installing opengl libs on windows
    - name: Install Windows OpenGL
      if: runner.os == 'Windows'
      run: |
        git clone --depth 1 https://github.com/pyvista/gl-ci-helpers.git
        powershell gl-ci-helpers/appveyor/install_opengl.ps1
        if (Test-Path -Path "C:\Windows\system32\opengl32.dll" -PathType Leaf) {Exit 0} else {Exit 1}

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .[test] 

    - name: Download Test Resources
      run: |
        python scripts/download_test_resources.py

    - name: Test with pytest
      uses: GabrielBB/xvfb-action@v1
      with:
        run: python -m pytest --cov-report=xml --cov=napari_aicsimageio
    - name: Upload codecov
      uses: codecov/codecov-action@v3

  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pre-commit
    - name: Lint with pre-commit
      run: pre-commit run --all-files

  publish:
    if: "success() && startsWith(github.ref, 'refs/tags/')"
    needs: [check-manifest, test, lint]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - name: Install Dependencies
      run: |
        git tag
        python -m pip install --upgrade pip
        pip install build wheel
    - name: Build Package
      run: python -m build
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: aicspypi
        password: ${{ secrets.PYPI_TOKEN }}
